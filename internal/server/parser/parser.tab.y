%{
//go:build !ignore_autogenerated
// +build !ignore_autogenerated

//nolint:all

package parser

import (
	"fmt"

	"github.com/nosborn/federation-1999/internal/model"
	"github.com/nosborn/federation-1999/pkg/ibgames"
)

type BayList struct {
	Size int
	Bay  [5]int32
}

var bayList BayList
%}

%token vA
%token vAccept
%token vAct
%token vAdd
%token vAdventurer
%token vAgricultural
%token vAlarm
%token vAle
%token vAllocate
%token vAmmunition
%token vAn
%token vAny
%token vAre
%token vArmour
%token vAt
%token vAutomatic
%token vBang
%token vBaron
%token vBash
%token vBay
%token vBeam
%token vBev
%token vBlack
%token vBlast
%token vBless
%token vBlue
%token vBribe
%token vBrief
%token vBroadcast
%token vBrown
%token vBuild
%token vBump
%token vButton
%token vBuy
%token vC3
%token vCaptain
%token vCargo
%token vChange
%token vChannel
%token vCheat
%token vCheck
%token vClear
%token vClothes
%token vCommands
%token vComms
%token vCommunicate
%token vCommunicating
%token vCompany
%token vComputer
%token vConfiguration
%token vContract
%token vCuddle
%token vCure
%token vDeal
%token vDeallocate
%token vDeity
%token vDexterity
%token vDigest
%token vDisplay
%token vDividend
%token vDown
%token vDownside
%token vDrink
%token vDrop
%token vDuchy
%token vDuchies
%token vDuty
%token vEast
%token vEat
%token vEducation
%token vEmbargo
%token vEnergy
%token vEngines
%token vEnter
%token vExamine
%token vExchange
%token vExpel
%token vExplorer
%token vFactories
%token vFactory
%token vFavoured
%token vFederation
%token vFetch
%token vFighting
%token vFire
%token vFit
%token vFlog
%token vFood
%token vFrom
%token vFuck
%token vFuel
%token vFull
%token vGag
%token vGamble
%token vGet
%token vGive
%token vGlance
%token vGo
%token vGoods
%token vGoto
%token vGps
%token vGroats
%token vGrope
%token vGtus
%token vGun
%token vHamsters
%token vHealth
%token vHelp
%token vHer
%token vHers
%token vHgw
%token vHim
%token vHis
%token vHostess
%token vHug
%token vHull
%token vIg
%token vImperial
%token vIn
%token vIndustrial
%token vInformation
%token vInfrastructure
%token vInstall
%token vInsure
%token vIntelligence
%token vInto
%token vInventory
%token vIs
%token vIssue
%token vIt
%token vIts
%token vJettison
%token vJig
%token vJob
%token vJobs
%token vJoin
%token vJump
%token vKiss
%token vKnit
%token vLamp
%token vLand
%token vLaser
%token vLaunch
%token vLayoff
%token vLeisure
%token vLever
%token vLink
%token vLiquidate
%token vLoad
%token vLock
%token vLook
%token vMag
%token vManual
%token vMarkup
%token vMatproc
%token vMattrans
%token vMe
%token vMilkrun
%token vMining
%token vMinutes
%token vMissile
%token vMissiles
%token vMood
%token vMovement
%token vMy
%token vNationalize
%token vNavigate
%token vNavigator
%token vNone
%token vNorth
%token vNortheast
%token vNorthwest
%token vNotice
%token vOf
%token vOff
%token vOffer
%token vOffline
%token vOn
%token vOnline
%token vOrange
%token vOrbit
%token vOrder
%token vOut
%token vOutput
%token vPaint
%token vPerivale
%token vPizza
%token vPlanet
%token vPlay
%token vPoints
%token vPost
%token vPress
%token vPrice
%token vProduction
%token vProject
%token vPromotional
%token vPull
%token vPut
%token vQL
%token vQuad
%token vQuark
%token vQuickscore
%token vQuickstatus
%token vQuickwho
%token vQuit
%token vRack
%token vRanks
%token vRate
%token vRead
%token vRed
%token vRegistry
%token vReject
%token vRepair
%token vRepay
%token vReport
%token vReset
%token vReward
%token vRound
%token vRoutes
%token vSalute
%token vSay
%token vScore
%token vScreen
%token vSecede
%token vSecurity
%token vSell
%token vSenator
%token vSet
%token vShares
%token vShelving
%token vShields
%token vShow
%token vShuffle
%token vSign
%token vSingle
%token vSlap
%token vSlide
%token vSlot
%token vSnog
%token vSnuggle
%token vSocial
%token vSouth
%token vSoutheast
%token vSouthwest
%token vSpaceship
%token vSpy
%token vSpybeam
%token vSpynet
%token vSpyscreen
%token vStaff
%token vStamina
%token vStarting
%token vStatus
%token vStockpile
%token vStore
%token vStrength
%token vSuicide
%token vSulk
%token vSwitch
%token vSystem
%token vSystems
%token vTarget
%token vTax
%token vTechnician
%token vTechnological
%token vTeleport
%token vTell
%token vThe
%token vTickle
%token vTime
%token vTimeout
%token vTimewarp
%token vTL
%token vTo
%token vTons
%token vTorch
%token vTour
%token vTrace
%token vTrade
%token vTrader
%token vTransmit
%token vTravel
%token vTune
%token vTwin
%token vType
%token vUngag
%token vUnload
%token vUnlock
%token vUnpost
%token vUnravel
%token vUp
%token vUpside
%token vUse
%token vVoid
%token vWages
%token vWait
%token vWanted
%token vWarehouse
%token vWarehouses
%token vWest
%token vWhereis
%token vWho
%token vWhois
%token vWith
%token vWork

%token vGAsChips
%token vBioChips
%token vMasers
%token vWeapons
%token vVidi
%token vElectros
%token vTools
%token vSynths
%token vDroids
%token vAntiMatter
%token vPowerPacks
%token vControllers
%token vGenerators
%token vPolymers
%token vLubOils
%token vPharms
%token vPetros
%token vRNA
%token vPropellants
%token vExplosives
%token vLanzariK
%token vNitros
%token vMunitions
%token vMechParts
%token vCereals
%token vWoods
%token vHides
%token vTextiles
%token vMeat
%token vSpices
%token vFruit
%token vSoya
%token vStock
%token vFurs
%token vRads
%token vNickel
%token vXmetals
%token vCrystals
%token vAlloys
%token vGold
%token vMonopoles
%token vHypnotapes
%token vStudios
%token vSensAmps
%token vGames
%token vArtifacts
%token vKatydidics
%token vMusiks
%token vLibraries
%token vHolos
%token vUnivators
%token vSims

%union {
	b bool
	buttonColour model.ButtonColour
	commodity model.Commodity
	delivery model.Delivery
	direction model.Direction
	gambleColour model.GambleColour
	group model.CommodityGroup
	i int32
	l int32
	name model.Name
	project model.Project
	psz string
}

%token <l> ID_NUM
%token <l> vInt
%token <l> vPercent
%token <psz> vPossessive
%token <l> PRETTY_INT
%token <l> vSignedInt
%token <psz> vText
%token <psz> vToken

%type <l> bay
%type <l> bay_no
%type <buttonColour> button_colour
%type <l> cargo_bay
%type <l> channel
%type <l> channel_no
%type <commodity> commodity
%type <delivery> delivery
%type <direction> direction
%type <psz> duchy_name
%type <l> factory_no
%type <psz> from_planet
%type <gambleColour> gamble_colour
%type <l> groats
%type <l> groats_int
%type <group> group
%type <l> gtus
%type <i> help_subtopic
%type <i> help_topic
%type <l> job_no
%type <l> job_spec
%type <l> location_no
%type <l> minutes
%type <l> minutes_no
%type <name> name
%type <l> on_channel
%type <psz> on_planet
%type <psz> opt_duchy_name
%type <l> opt_factory_no
%type <psz> opt_on_planet
%type <psz> opt_planet_name
%type <l> opt_points
%type <l> opt_quantity
%type <psz> opt_system_name
%type <psz> opt_text
%type <b> opt_the
%type <psz> opt_token
%type <l> percent
%type <psz> planet_name
%type <psz> player_name
%type <l> points
%type <project> project
%type <l> quantity
%type <l> shares
%type <l> shares_no
%type <l> slot
%type <l> slot_no
%type <psz> system_name
%type <l> tax
%type <l> to_channel
%type <delivery> to_delivery
%type <psz> to_planet
%%

command:	accept
	|	act
	|	add
	|	alarm
	|	allocate
	|	automatic
	|	bang
	|	bash
	|	blast
	|	bless
	|	bribe
	|	brief
	|	broadcast
	|	build
	|	bump
	|	buy
	|	change
	|	cheat
	|	check
	|	clear
	|	commands
	|	comms
	|	communicate
	|	contract
	|	cuddle
	|	cure
	|	deal
	|	deallocate
	|	digest
	|	display
	|	dividend
	|	drink
	|	drop
	|	eat
	|	enter
	|	examine
	|	expel
	|	federation
	|	fetch
	|	fire
	|	fit
	|	flog
	|	fuck
	|	full
	|	gag
	|	gamble
	|	get
	|	give
	|	glance
	|	go
	|	goto
	|	gps
	|	grope
	|	hamsters
	|	help
	|	hug
	|	install
	|	insure
	|	inventory
	|	issue
	|	jettison
	|	job
	|	jobs
	|	join
	|	jump
	|	kiss
	|	knit
	|	land
	|	launch
	|	liquidate
	|	load
	|	lock
	|	look
	|	manual
	|	mood
	|	nationalize
	|	navigate
	|	offer
	|	offline
	|	online
	|	orbit
	|	order
	|	paint
	|	planet
	|	play
	|	post
	|	press
	|	pull
	|	put
	|	quickscore
	|	quickstatus
	|	quickwho
	|	quit
	|	ranks
	|	read
	|	registry
	|	reject
	|	repair
	|	repay
	|	reset
	|	reward
	|	salute
	|	say
	|	score
	|	secede
	|	sell
	|	set
	|	show
	|	shuffle
	|	sign
	|	slap
	|	slide
	|	snog
	|	snuggle
	|	spy
	|	spynet
	|	status
	|	store
	|	suicide
	|	sulk
	|	switch
	|	systems
	|	target
	|	teleport
	|	tell
	|	tickle
	|	time
	|	timeout
	|	timewarp
	|	torch
	|	tour
	|	trace
	|	trade
	|	transmit
	|	travel
	|	tune
	|	type
	|	ungag
	|	unload
	|	unlock
	|	unpost
	|	unravel
	|	use
	|	void
	|	wait
	|	wanted
	|	whereis
	|	who
	|	whois
	|	work
	|	error {
			yylex.(*lexer).player.UnknownCommand()
			return 0
		}
	;

accept:		vAccept vFactory '\n' {
			yylex.(*lexer).player.CmdAcceptFactory()
		}
	|	vAccept job_spec '\n' {
			yylex.(*lexer).player.CmdAcceptJob($2)
		}
	;

act:		vAct vText '\n' {
			yylex.(*lexer).player.CmdAct($2)
		}
	;

add:		vAdd { initBayList() } bay_list opt_planet_name '\n' {
			yylex.(*lexer).player.CmdAdd(&bayList, $4)
		}
	;

alarm:		vAlarm minutes '\n' {
			yylex.(*lexer).player.CmdAlarm($2)
		}
	|	vAlarm vOff '\n' {
			yylex.(*lexer).player.CmdAlarmOff()
		}
	;

allocate:	vAllocate points commodity '\n' {
			yylex.(*lexer).player.CmdAllocate($2, $3)
		}
	|	vAllocate opt_points lit_social_security '\n' {
			yylex.(*lexer).player.CmdAllocateSocialSecurity($2)
		}
	;

automatic:	vAutomatic '\n' {
			yylex.(*lexer).player.CmdAutomatic()
		}
	;

bang:		vBang '\n' {
			yylex.(*lexer).player.CmdBang()
		}
	;

bash:		vBash '\n' {
			yylex.(*lexer).player.CmdBash()
		}
	;

blast:		vBlast name vWith name '\n' {
			yylex.(*lexer).player.CmdBlast($2, $4)
		}
	;

bless:		vBless vHostess player_name '\n' {
			yylex.(*lexer).player.CmdBlessHostess($3)
		}
	|	vBless vSenator player_name '\n' {
			yylex.(*lexer).player.CmdBlessSenator($3)
		}
	;

bribe:		vBribe groats '\n' {
			yylex.(*lexer).player.CmdBribe($2)
		}
	|	vBribe opt_lit_the vTechnician '\n' {
			yylex.(*lexer).player.CmdBribeTechnician()
		}
	;

brief:		vBrief '\n' {
			yylex.(*lexer).player.CmdBrief()
		}
	;

broadcast:	vBroadcast vText '\n' {
			yylex.(*lexer).player.CmdBroadcast($2)
		}
	;

build:		vBuild project '\n' {
			yylex.(*lexer).player.CmdBuild($2)
		}
	;

bump:		vBump player_name '\n' {
			yylex.(*lexer).player.CmdBump($2)
		}
	;

buy:		vBuy vAle '\n' {
			yylex.(*lexer).player.CmdBuyAle()
		}
	|	vBuy opt_quantity vAmmunition '\n' {
			yylex.(*lexer).player.CmdBuyAmmunition($2)
		}
	|	vBuy vClothes vText '\n' {
			yylex.(*lexer).player.CmdBuyClothes($3)
		}
	|	vBuy vCompany vText '\n' {
			yylex.(*lexer).player.CmdBuyCompany($3)
		}
	|	vBuy opt_quantity vDexterity '\n' {
			yylex.(*lexer).player.CmdBuyDexterity($2)
		}
	|	vBuy vFactory commodity vToken '\n' {
			yylex.(*lexer).player.CmdBuyFactory($4, $3)
		}
	|	vBuy vFactory vToken commodity '\n' {
			yylex.(*lexer).player.CmdBuyFactory($3, $4)
		}
	|	vBuy vFood '\n' {
			yylex.(*lexer).player.CmdBuyFood()
		}
	|	vBuy opt_quantity vFuel '\n' {
			yylex.(*lexer).player.CmdBuyFuel($2)
		}
	|	vBuy opt_quantity commodity opt_planet_name '\n' {
			yylex.(*lexer).player.CmdBuyGoods($3, $4, $2)
		}
	|	vBuy opt_quantity vIntelligence '\n' {
			yylex.(*lexer).player.CmdBuyIntelligence($2)
		}
	|	vBuy opt_lit_a vLamp '\n' {
			yylex.(*lexer).player.CmdBuyLamp()
		}
	|	vBuy opt_quantity vMissiles '\n' {
			yylex.(*lexer).player.CmdBuyMissiles($2)
		}
	|	vBuy vPizza '\n' {
			yylex.(*lexer).player.CmdBuyPizza()
		}
	|	vBuy opt_lit_a vRound opt_text '\n' {
			yylex.(*lexer).player.CmdBuyRound($4)
		}
	|	vBuy lit_spy_beam '\n' {
			yylex.(*lexer).player.CmdBuySpyBeam()
		}
	|	vBuy lit_spy_screen '\n' {
			yylex.(*lexer).player.CmdBuySpyScreen()
		}
	|	vBuy opt_quantity vStamina '\n' {
			yylex.(*lexer).player.CmdBuyStamina($2)
		}
	|	vBuy opt_quantity vStrength '\n' {
			yylex.(*lexer).player.CmdBuyStrength($2)
		}
	|	vBuy vWarehouse '\n' {
			yylex.(*lexer).player.CmdBuyWarehouse()
		}
	;

change:		vChange '\n' {
			yylex.(*lexer).player.CmdChange()
		}
	;

cheat:		vCheat '\n' {
			yylex.(*lexer).player.CmdCheat()
		}
	;

check:		vCheck vCargo '\n' {
			yylex.(*lexer).player.CmdCheckCargo()
		}
	|	vCheck vPrice commodity opt_duchy_name '\n' {
			yylex.(*lexer).player.CmdCheckPrice($3, $4)
		}
	|	vCheck vWarehouse opt_on_planet '\n' {
			yylex.(*lexer).player.CmdCheckWarehouse($3)
		}
	;

clear:		vClear vEmbargo '\n' {
			yylex.(*lexer).player.CmdClearEmbargo()
		}
	|	vClear opt_lit_factory opt_factory_no '\n' {
			yylex.(*lexer).player.CmdClearFactory($3)
		}
	|	vClear vFavoured '\n' {
			yylex.(*lexer).player.CmdClearFavoured()
		}
	|	vClear vMilkrun slot '\n' {
			yylex.(*lexer).player.CmdClearMilkrun($3)
		}

commands:	vCommands '\n' {
			yylex.(*lexer).player.CmdHelp(vCommands, 0)
		}

comms:		vComms '\n' {
			yylex.(*lexer).player.CmdComms()
		}
	|	vComms vOff '\n' {
			yylex.(*lexer).player.CmdCommsOff()
		}
	|	vComms vOn '\n' {
			yylex.(*lexer).player.CmdCommsOn()
		}
	;

communicate:	vCommunicate vText '\n' {
			yylex.(*lexer).player.CmdCommunicate($2)
		}
	;

contract:	vContract player_name from_planet bay groats '\n' {
			yylex.(*lexer).player.CmdContract($2, $3, $4, $5)
		}
	;

cuddle:		vCuddle player_name '\n' {
			yylex.(*lexer).player.CmdCuddle($2)
		}
	;

cure:		vCure opt_lit_me '\n' {
			yylex.(*lexer).player.CmdCure()
		}
	;

deal:		vDeal '\n' {
			yylex.(*lexer).player.CmdDeal()
		}
	;

deallocate:	vDeallocate commodity '\n' {
			yylex.(*lexer).player.CmdDeallocate($2)
		}
	|	vDeallocate opt_points lit_social_security '\n' {
			yylex.(*lexer).player.CmdDeallocateSocialSecurity($2)
		}
	;

digest:		vDigest group '\n' {
			yylex.(*lexer).player.CmdDigest1($2)
		}
	|	vDigest group planet_name '\n' {
			yylex.(*lexer).player.CmdDigest2($2, $3)
		}
	;

display:	vDisplay vCompany '\n' {
			yylex.(*lexer).player.CmdDisplayCompany("")
		}
	|	vDisplay vCompany vText '\n' {
			yylex.(*lexer).player.CmdDisplayCompany($3)
		}
	|	vDisplay vDuchies '\n' {
			yylex.(*lexer).player.CmdDisplayDuchies()
		}
	|	vDisplay vDuchy '\n' {
			yylex.(*lexer).player.CmdDisplayDuchy("")
		}
	|	vDisplay vDuchy vToken '\n' {
			yylex.(*lexer).player.CmdDisplayDuchy($3)
		}
	|	vDisplay vFactories '\n' {
			yylex.(*lexer).player.CmdDisplayFactories("")
		}
	|	vDisplay vFactories vToken '\n' {
			yylex.(*lexer).player.CmdDisplayFactories($3)
		}
	|	vDisplay vFactory opt_factory_no '\n' {
			yylex.(*lexer).player.CmdDisplayFactory($3)
		}
	|	vDisplay vInformation project '\n' {
			yylex.(*lexer).player.CmdDisplayInformation($3)
		}
	|	vDisplay vPlanet '\n' {
			yylex.(*lexer).player.CmdDisplayPlanet("")
		}
	|	vDisplay opt_lit_planet vToken '\n' {
			yylex.(*lexer).player.CmdDisplayPlanet($3)
		}
	|	vDisplay vProduction '\n' {
			yylex.(*lexer).player.CmdDisplayProduction()
		}
	|	vDisplay vProject '\n' {
			yylex.(*lexer).player.CmdDisplayProject()
		}
	|	vDisplay vRoutes '\n' {
			yylex.(*lexer).player.CmdDisplayRoutes()
		}
	|	vDisplay vWarehouses '\n' {
			yylex.(*lexer).player.CmdDisplayWarehouses()
		}
	;

dividend:	vDividend groats '\n' {
			yylex.(*lexer).player.CmdDividend($2)
		}
	;

drink:		vDrink name '\n' {
			yylex.(*lexer).player.CmdDrink($2)
		}
	;

drop:		vDrop name '\n' {
			yylex.(*lexer).player.CmdDrop($2)
		}
	;

eat:		vEat name '\n' {
			yylex.(*lexer).player.CmdEat($2)
		}
	;

enter:		vEnter opt_lit_my opt_lit_spaceship '\n' {
			yylex.(*lexer).player.CmdEnter()
		}
	;

examine:	vExamine name '\n' {
			yylex.(*lexer).player.CmdExamine($2)
		}
	|	vExamine opt_lit_my vSpaceship '\n' {
			yylex.(*lexer).player.CmdExamineSpaceship(yylex.(*lexer).player.Name())
		}
	|	vExamine vPossessive vSpaceship '\n' {
			yylex.(*lexer).player.CmdExamineSpaceship($2)
		}
	;

expel:		vExpel planet_name '\n' {
			yylex.(*lexer).player.CmdExpel($2)
		}
	;

federation:	vFederation '\n' {
			yylex.(*lexer).player.CmdFederation()
		}
	;

fetch:		vFetch opt_lit_warehouse { initBayList() } bay_list '\n' {
			yylex.(*lexer).player.CmdFetch(&bayList)
		}
	;

fire:		vFire lit_laser '\n' {
			yylex.(*lexer).player.CmdFire(model.GunLaser, nil) // FIXME
		}
	|	vFire lit_laser opt_lit_at name '\n' {
			yylex.(*lexer).player.CmdFire(model.GunLaser, &$4) // FIXME
		}
	|	vFire lit_mag_gun '\n' {
			yylex.(*lexer).player.CmdFire(model.GunMagGun, nil) // FIXME
		}
	|	vFire lit_mag_gun opt_lit_at name '\n' {
			yylex.(*lexer).player.CmdFire(model.GunMagGun, &$4) // FIXME
		}
	|	vFire lit_quad_laser '\n' {
			yylex.(*lexer).player.CmdFire(model.GunQuadLaser, nil) // FIXME
		}
	|	vFire lit_quad_laser opt_lit_at name '\n' {
			yylex.(*lexer).player.CmdFire(model.GunQuadLaser, &$4) // FIXME
		}
	|	vFire lit_twin_laser '\n' {
			yylex.(*lexer).player.CmdFire(model.GunTwinLaser, nil) // FIXME
		}
	|	vFire lit_twin_laser opt_lit_at name '\n' {
			yylex.(*lexer).player.CmdFire(model.GunTwinLaser, &$4) // FIXME
		}
	|	vFire opt_lit_at name '\n' {
			yylex.(*lexer).player.CmdFire(0, &$3) // FIXME
		}
	;

fit:		vFit name '\n' {
			yylex.(*lexer).player.CmdFit($2)
		}
	;

flog:		vFlog player_name '\n' {
			yylex.(*lexer).player.CmdFlog($2)
		}
	;

fuck:		vFuck name '\n' {
			yylex.(*lexer).player.CmdFuck($2)
		}
	;

full:		vFull '\n' {
			yylex.(*lexer).player.CmdFull()
		}
	;

gag:		vGag player_name '\n' {
			yylex.(*lexer).player.CmdGag($2)
		}
	;

gamble:		vGamble gamble_colour groats_int '\n' {
			yylex.(*lexer).player.CmdGamble($2, $3)
		}
	|	vGamble groats_int gamble_colour '\n' {
			yylex.(*lexer).player.CmdGamble($3, $2)
		}
	;

get:		vGet name '\n' {
			yylex.(*lexer).player.CmdGet($2)
		}
	;

give:		vGive name vTo name '\n' {
			yylex.(*lexer).player.CmdGiveObject($2, $4)
		}
	|	vGive groats vTo name '\n' {
			yylex.(*lexer).player.CmdGiveGroats($2, $4)
		}
	|	vGive name groats '\n' {
			yylex.(*lexer).player.CmdGiveGroats($3, $2)
		}
	;

glance:		vGlance '\n' {
			yylex.(*lexer).player.CmdGlance()
		}
	;

go:		opt_vGo direction '\n' {
			yylex.(*lexer).player.CmdGo($2)
		}
	;

goto:		vGoto vToken '\n' {
			yylex.(*lexer).player.CmdGoto($2)
		}
	;

gps:		vGps '\n' {
			yylex.(*lexer).player.CmdGPS()
		}
	;

grope:		vGrope player_name '\n' {
			yylex.(*lexer).player.CmdGrope($2)
		}
	;

hamsters:	vHamsters '\n' {
			yylex.(*lexer).player.CmdHamsters()
		}
	;

help:	|	vHelp '\n' {
			yylex.(*lexer).player.CmdHelp(0, 0)
		}
		vHelp vCommands '\n' {
			yylex.(*lexer).player.CmdHelp(vCommands, 0)
		}
	|	vHelp vFederation '\n' {
			yylex.(*lexer).player.CmdFederation()
		}
	|	vHelp vFederation error '\n' {
			yylex.(*lexer).player.CmdFederation()
			return 0 // TODO ??
		}
	|	vHelp vHamsters '\n' {
			yylex.(*lexer).player.CmdHamsters()
		}
	|	vHelp vHamsters error '\n' {
			yylex.(*lexer).player.CmdHamsters()
			return 0 // FIXME ??
		}
	|	vHelp help_topic '\n' {
			yylex.(*lexer).player.CmdHelp($2, 0)
		}
	|	vHelp help_topic help_subtopic '\n' {
			yylex.(*lexer).player.CmdHelp($2, $3)
		}
	|	vHelp help_topic help_subtopic error '\n' {
			yylex.(*lexer).player.CmdHelp($2, $3)
			return 0 // FIXME??
		}
	|	vHelp help_topic error '\n' {
			yylex.(*lexer).player.CmdHelp($2, 0)
			return 0 // FIXME??
		}
	|	vHelp error '\n' {
			yylex.(*lexer).player.CmdHelp(0, 0)
			return 0 // FIXME ??
		}
	;

hug:		vHug player_name '\n' {
			yylex.(*lexer).player.CmdHug($2)
		}
	;

install:	vInstall opt_quantity vArmour '\n' {
			yylex.(*lexer).player.CmdInstallArmour($2)
		}
	|	vInstall opt_quantity vComputer '\n' {
			yylex.(*lexer).player.CmdInstallComputer($2)
		}
	|	vInstall opt_quantity vEngines '\n' {
			yylex.(*lexer).player.CmdInstallEngines($2)
		}
	|	vInstall opt_quantity vHull '\n' {
			yylex.(*lexer).player.CmdInstallHull($2)
		}
	|	vInstall lit_laser '\n' {
			yylex.(*lexer).player.CmdInstallGun(model.GunLaser) // TODO
		}
	|	vInstall lit_mag_gun '\n' {
			yylex.(*lexer).player.CmdInstallGun(model.GunMagGun) // TODO
		}
	|	vInstall lit_missile_rack '\n' {
			yylex.(*lexer).player.CmdInstallGun(model.GunMissile) // TODO
		}
	|	vInstall lit_quad_laser '\n' {
			yylex.(*lexer).player.CmdInstallGun(model.GunQuadLaser) // TODO
		}
	|	vInstall lit_twin_laser '\n' {
			yylex.(*lexer).player.CmdInstallGun(model.GunTwinLaser) // TODO
		}
	|	vInstall opt_quantity vShields '\n' {
			yylex.(*lexer).player.CmdInstallShields($2)
		}
	;

insure:		vInsure '\n' {
			yylex.(*lexer).player.CmdInsure(model.InsureGetQuote)
		}
	|	vInsure vMe '\n' {
			yylex.(*lexer).player.CmdInsure(model.InsureBuyPolicy)
		}
	;

inventory:	vInventory '\n' {
			yylex.(*lexer).player.CmdInventory()
		}
	;

issue:		vIssue shares '\n' {
			yylex.(*lexer).player.CmdIssue($2)
		}
	;

jettison:	vJettison vAmmunition '\n' {
			yylex.(*lexer).player.CmdJettisonAmmunition()
		}
	|	vJettison vMissile '\n' {
			yylex.(*lexer).player.CmdJettisonMissile()
		}
	;

job:		vJob '\n' {
			yylex.(*lexer).player.CmdJob()
		}
	;

jobs:		vJobs '\n' {
			yylex.(*lexer).player.CmdJobs()
		}
	|	vJobs vOff '\n' {
			yylex.(*lexer).player.CmdJobsOff()
		}
	|	vJobs vOn '\n' {
			yylex.(*lexer).player.CmdJobsOn()
		}
	;

join:		vJoin duchy_name '\n' {
			yylex.(*lexer).player.CmdJoin($2)
		}
	;

jump:		vJump opt_lit_to duchy_name '\n' {
			yylex.(*lexer).player.CmdJump($3)
		}
	;

kiss:		vKiss player_name '\n' {
			yylex.(*lexer).player.CmdKiss($2)
		}
	;

knit:		vKnit vBaron player_name '\n' {
			yylex.(*lexer).player.CmdKnitBaron($3)
		}
	|	vKnit vExplorer player_name '\n' {
			yylex.(*lexer).player.CmdKnitExplorer($3, false)
		}
	|	vKnit vPromotional vExplorer player_name '\n' {
			yylex.(*lexer).player.CmdKnitExplorer($4, true)
		}
	|	vKnit vNavigator player_name '\n' {
			yylex.(*lexer).player.CmdKnitNavigator($3)
		}
	;

land:		vLand opt_lit_spaceship '\n' {
			yylex.(*lexer).player.CmdLand()
		}
	;

launch:		vLaunch opt_lit_a_missile '\n' {
			yylex.(*lexer).player.CmdLaunch(model.Name{})
		}
	|	vLaunch opt_lit_a_missile opt_lit_at name '\n' {
			yylex.(*lexer).player.CmdLaunch($4)
		}
	;

liquidate:	vLiquidate vCompany '\n' {
			yylex.(*lexer).player.CmdLiquidateCompany()
		}
	|	vLiquidate vFactory opt_factory_no '\n' {
			yylex.(*lexer).player.CmdLiquidateFactory($3)
		}
	|	vLiquidate vWarehouse opt_lit_on vToken '\n' {
			yylex.(*lexer).player.CmdLiquidateWarehouse($4)
		}
	;

load:		vLoad opt_lit_cargo_or_job '\n' {
			yylex.(*lexer).player.CmdLoad()
		}
	;

lock:		vLock player_name '\n' {
			yylex.(*lexer).player.CmdLock($2)
		}
	;

look:		vLook '\n' {
			yylex.(*lexer).player.CmdLook()
		}
	;

manual:		vManual '\n' {
			yylex.(*lexer).player.CmdManual()
		}
	;

mood:		vMood '\n' {
			yylex.(*lexer).player.CmdMood("")
		}
	|	vMood lit_none_or_off '\n' { // FIXME: lexer won't return vNone here
			yylex.(*lexer).player.CmdMoodOff()
		}
	|	vMood vText '\n' {
			yylex.(*lexer).player.CmdMood($2)
		}
	;

nationalize:	vNationalize vText '\n' {
			yylex.(*lexer).player.CmdNationalize($2)
		}
	;

navigate:	vNavigate '\n' {
			yylex.(*lexer).player.CmdNavigate()
		}
	|	vNavigate vOff '\n' {
			yylex.(*lexer).player.CmdNavigateOff()
		}
	|	vNavigate vOn '\n' {
			yylex.(*lexer).player.CmdNavigateOn()
		}
	;

offer:		vOffer vJob commodity vToken groats '\n' {
			yylex.(*lexer).player.CmdOfferJob($3, $4, $5)
		}
	|	vOffer player_name vToken bay vToken gtus groats '\n' {
			yylex.(*lexer).player.CmdOffer($2, $3, $4, $5, $6, $7, false)
		}
	|	vOffer player_name vToken bay vToken vWarehouse gtus groats '\n'
		'\n' {
			yylex.(*lexer).player.CmdOffer($2, $3, $4, $5, $7, $8, true)
		}
	;

offline:	vOffline '\n' {
			yylex.(*lexer).player.CmdOffline()
		}
	;

online:		vOnline '\n' {
			yylex.(*lexer).player.CmdOnline("")
		}
	|	vOnline planet_name '\n' {
			yylex.(*lexer).player.CmdOnline($2)
		}
	;

orbit:		vOrbit '\n' {
			yylex.(*lexer).player.CmdOrbit()
		}
	;

order:		vOrder '\n' {
			yylex.(*lexer).player.CmdOrder("")
		}
	|	vOrder vPlanet vFire '\n' {
			yylex.(*lexer).player.CmdOrderPlanet("fire")
		}
	|	vOrder vPlanet vToken '\n' {
			yylex.(*lexer).player.CmdOrderPlanet($3)
		}
	|	vOrder vSpaceship '\n' {
			yylex.(*lexer).player.CmdOrderSpaceship()
		}
	|	vOrder vToken '\n' {
			yylex.(*lexer).player.CmdOrder($2)
		}
	;

paint:		vPaint vSpaceship vText '\n' {
			yylex.(*lexer).player.CmdPaintSpaceship($3)
		}
	;

planet:		vPlanet '\n' {
			yylex.(*lexer).player.CmdPlanet()
		}
	;

play:		vPlay vText '\n' {
			yylex.(*lexer).player.CmdPlay($2)
		}
	;

post:		vPost vText '\n' {
			yylex.(*lexer).player.CmdPost($2)
		}
	;

press:		vPress '\n' {
			yylex.(*lexer).player.CmdPress()
		}
	|	vPress opt_lit_any_or_the vButton '\n' {
			yylex.(*lexer).player.CmdPressButton0()
		}
	|	vPress opt_lit_the button_colour vButton '\n' {
			yylex.(*lexer).player.CmdPressButton1($3)
		}
	;

pull:		vPull opt_lit_the vLever '\n' {
			yylex.(*lexer).player.CmdPullLever()
		}
	;

put:		vPut name lit_into opt_lit_the vJig '\n' {
			yylex.(*lexer).player.CmdPutIntoJig($2)
		}
	|	vPut name lit_into opt_lit_the vSlot '\n' {
			yylex.(*lexer).player.CmdPutIntoSlot($2)
		}
	;

quickscore:	vQuickscore '\n' {
			yylex.(*lexer).player.CmdQuickScore()
		}
	;

quickstatus:	vQuickstatus '\n' {
			yylex.(*lexer).player.CmdQuickStatus()
		}
	;

quickwho:	vQuickwho '\n' {
			yylex.(*lexer).player.CmdQuickWho()
		}
	|	vQuickwho on_channel '\n' {
			yylex.(*lexer).player.CmdQuickWhoChannel($2)
		}
	|	vQuickwho opt_lit_in system_name '\n' {
			yylex.(*lexer).player.CmdQuickWhoSystem($3)
		}
	;

quit:		vQuit '\n' {
			yylex.(*lexer).player.CmdQuit()
		}
	;

ranks:		vRanks '\n' {
			yylex.(*lexer).player.CmdRanks()
		}
	;

read:		vRead '\n' {
			yylex.(*lexer).player.CmdRead()
		}
	;

registry:	vRegistry '\n' {
			yylex.(*lexer).player.CmdRegistry()
		}
	;

reject:		vReject '\n' {
			yylex.(*lexer).player.CmdReject()
		}
	|	vReject vFactory '\n' {
			yylex.(*lexer).player.CmdRejectFactory()
		}
	;

repair:		vRepair vComputer '\n' {
			yylex.(*lexer).player.CmdRepairComputer()
		}
	|	vRepair vEngines '\n' {
			yylex.(*lexer).player.CmdRepairEngines()
		}
	|	vRepair lit_laser '\n' {
			yylex.(*lexer).player.CmdRepairGun(model.GunLaser)
		}
	|	vRepair lit_mag_gun '\n' {
			yylex.(*lexer).player.CmdRepairGun(model.GunMagGun)
		}
	|	vRepair lit_missile_rack '\n' {
			yylex.(*lexer).player.CmdRepairGun(model.GunMissile)
		}
	|	vRepair lit_quad_laser '\n' {
			yylex.(*lexer).player.CmdRepairGun(model.GunQuadLaser)
		}
	|	vRepair lit_twin_laser '\n' {
			yylex.(*lexer).player.CmdRepairGun(model.GunTwinLaser)
		}
	|	vRepair vHull '\n' {
			yylex.(*lexer).player.CmdRepairHull()
		}
	|	vRepair vShields '\n' {
			yylex.(*lexer).player.CmdRepairShields()
		}
	;

repay:		vRepay groats '\n' {
			yylex.(*lexer).player.CmdRepay($2)
		}
	;

reset:		vReset '\n' {
			yylex.(*lexer).player.CmdReset()
		}
	;

reward:		vReward groats player_name '\n' {
			yylex.(*lexer).player.CmdReward($2, $3)
		}
	|	vReward player_name groats '\n' {
			yylex.(*lexer).player.CmdReward($3, $2)
		}
	;

salute:		vSalute '\n' {
			yylex.(*lexer).player.CmdSalute()
		}
	;

say:		vSay vText '\n' {
			yylex.(*lexer).player.CmdSay($2)
		}
	;

score:		vScore '\n' {
			yylex.(*lexer).player.CmdScore()
		}
	;

secede:		vSecede '\n' {
			yylex.(*lexer).player.CmdSecede()
		}
	;

sell:		vSell cargo_bay '\n' {
			yylex.(*lexer).player.CmdSellCargo($2)
		}
	|	vSell vFactory opt_factory_no '\n' {
			yylex.(*lexer).player.CmdSellFactory($3) // FIXME: optional
		}
	|	vSell vSpaceship '\n' {
			yylex.(*lexer).player.CmdSellSpaceship()
		}
	|	vSell vWarehouse planet_name '\n' {
			yylex.(*lexer).player.CmdSellWarehouse($3)
		}
	;

set:		vSet vDuchy lit_tax_rate opt_lit_to tax '\n' {
			yylex.(*lexer).player.CmdSetDuchyTax($5)
		}
	|	vSet vEmbargo vToken '\n' {
			yylex.(*lexer).player.CmdSetEmbargo($3)
		}
	|	vSet vFavoured vToken '\n' {
			yylex.(*lexer).player.CmdSetFavoured($3)
		}
	|	vSet vFavoured lit_tax_rate opt_lit_to tax '\n' {
			yylex.(*lexer).player.CmdSetFavouredTax($5)
		}
	|	vSet vLayoff opt_lit_to groats '\n' {
			yylex.(*lexer).player.CmdSetLayoff($4)
		}
	|	vSet vMarkup percent '\n' {
			yylex.(*lexer).player.CmdSetMarkup($3)
		}
	|	vSet vMarkup commodity percent '\n' {
			yylex.(*lexer).player.CmdSetMarkupCommodity($3, $4)
		}
	|	vSet vMilkrun slot commodity to_planet groats '\n' {
			yylex.(*lexer).player.CmdSetMilkrun($3, $4, $5, $6)
		}
	|	vSet vMilkrun slot lit_none_or_off '\n' {
			yylex.(*lexer).player.CmdClearMilkrun($3)
		}
	|	vSet vOutput to_delivery '\n' {
			yylex.(*lexer).player.CmdSetOutput($3)
		}
	|	vSet vPlanet lit_tax_rate opt_lit_to tax '\n' {
			yylex.(*lexer).player.CmdSetPlanetTax($5)
		}
	|	vSet vStockpile commodity quantity '\n' {
			yylex.(*lexer).player.CmdSetStockpile($3, $4)
		}
	|	vSet lit_tax_rate opt_lit_to tax '\n' {
			yylex.(*lexer).player.CmdSetTax($4)
		}
	|	vSet vWages opt_lit_to groats '\n' {
			yylex.(*lexer).player.CmdSetWages($4)
		}
	;

show:		vShow vConfiguration '\n' {
			yylex.(*lexer).player.CmdShowConfiguration()
		}
	|	vShow vProduction '\n' {
			yylex.(*lexer).player.CmdShowProduction()
		}
	|	vShow vStatus '\n' {
			yylex.(*lexer).player.CmdShowStatus()
		}
	;

shuffle:	vShuffle opt_lit_warehouse opt_on_planet '\n' {
			yylex.(*lexer).player.CmdShuffle($3)
		}
	;

sign:		vSign '\n' {
			yylex.(*lexer).player.CmdSign()
		}
	;

slap:		vSlap player_name '\n' {
			yylex.(*lexer).player.CmdSlap($2)
		}
	;

slide:		vSlide '\n' {
			yylex.(*lexer).player.CmdSlide()
		}
	|	vSlide opt_lit_the vShelving '\n' {
			yylex.(*lexer).player.CmdSlideShelving()
		}
	;

snog:		vSnog player_name '\n' {
			yylex.(*lexer).player.CmdSnog($2)
		}
	;

snuggle:	vSnuggle player_name '\n' {
			yylex.(*lexer).player.CmdSnuggle($2)
		}
	;

spy:		vSpy '\n' {
			yylex.(*lexer).player.CmdSpy("")
		}
	|	vSpy opt_lit_on player_name '\n' {
			yylex.(*lexer).player.CmdSpy($3)
		}
	|	vSpy vOff '\n' {
			yylex.(*lexer).player.CmdSpyOff()
		}
	;

spynet:		vSpynet vNotice '\n' {
			yylex.(*lexer).player.CmdSpynetNotice()
		}
	|	vSpynet vReport vText '\n' {
			yylex.(*lexer).player.CmdSpynetReport($3)
		}
	;

status:		vStatus '\n' {
			yylex.(*lexer).player.CmdStatus()
		}
	;

store:		vStore opt_lit_cargo { initBayList() } bay_list '\n' {
			yylex.(*lexer).player.CmdStore(&bayList)
		}
	;

suicide:	vSuicide '\n' {
			yylex.(*lexer).player.CmdSuicide()
		}
	;

sulk:		vSulk '\n' {
			yylex.(*lexer).player.CmdSulk()
		}
	;

switch:		vSwitch '\n' {
			yylex.(*lexer).player.CmdSwitchShields()
		}
	|	vSwitch vShields '\n' {
			yylex.(*lexer).player.CmdSwitchShields()
		}
	;

systems:	vSystems '\n' {
			yylex.(*lexer).player.CmdSystems()
		}
	;

target:		vTarget '\n' {
			yylex.(*lexer).player.CmdTarget("")
		}
	|	vTarget player_name '\n' {
			yylex.(*lexer).player.CmdTarget($2)
		}
	|	vTarget vOff '\n' {
			yylex.(*lexer).player.CmdTargetOff()
		}
	;

teleport:	vTeleport opt_lit_to opt_system_name location_no '\n' {
			yylex.(*lexer).player.CmdTeleport($4, $3)
		}
	;

tell:		vTell player_name vText '\n' {
			yylex.(*lexer).player.CmdTell($2, $3)
		}
	;

tickle:		vTickle player_name '\n' {
			yylex.(*lexer).player.CmdTickle($2)
		}
	;

time:		vTime '\n' {
			yylex.(*lexer).player.CmdTime()
		}
	;

timeout:	vTimeout '\n' {
			yylex.(*lexer).player.CmdTimeout()
		}
	|	vTimeout minutes '\n' {
			yylex.(*lexer).player.CmdTimeout($2)
		}
	|	vTimeout vOff '\n' {
			yylex.(*lexer).player.CmdTimeoutOff()
		}
	;

timewarp:	vTimewarp '\n' {
			yylex.(*lexer).player.CmdTimewarp()
		}
	;

torch:		vTorch opt_planet_name bay '\n' {
			yylex.(*lexer).player.CmdTorch($2, $3)
		}
	;

tour:		vTour '\n' {
			yylex.(*lexer).player.CmdTour()
		}
	;

trace:		vTrace '\n' {
			yylex.(*lexer).player.CmdTrace(0) // FIXME
		}
	;

trade:		vTrade '\n' {
			yylex.(*lexer).player.CmdTrade()
		}
	|	vTrade group '\n' {
			yylex.(*lexer).player.CmdTradeGroup($2)
		}
	|	vTrade lit_none_or_off '\n' {
			yylex.(*lexer).player.CmdTradeGroup(model.GroupNone)
		}
	;

transmit:	vTransmit vText '\n' {
			yylex.(*lexer).player.CmdTransmit($2)
		}
	;

travel:		vTravel to_planet '\n' {
			yylex.(*lexer).player.CmdTravel($2)
		}
	;

tune:		vTune to_channel '\n' {
			yylex.(*lexer).player.CmdTune($2)
		}
	|	vTune vOff '\n' {
			yylex.(*lexer).player.CmdTuneOff()
		}
	;

type:		vType vText '\n' {
			yylex.(*lexer).player.CmdType($2)
		}
	;

trace:		vTrace vOff '\n' {
			yylex.(*lexer).player.CmdTrace(model.TraceNone)
		}
		vTrace vPerivale '\n' {
			yylex.(*lexer).player.CmdTrace(model.TracePerivale)
		}
	;

ungag:		vUngag player_name '\n' {
			yylex.(*lexer).player.CmdUngag($2)
		}
	;

unload:		vUnload opt_lit_cargo_or_job '\n' {
			yylex.(*lexer).player.CmdUnload()
		}
	;

unlock:		vUnlock player_name '\n' {
			yylex.(*lexer).player.CmdUnlock($2)
		}
	;

unpost:		vUnpost player_name '\n' {
			yylex.(*lexer).player.CmdUnpost($2)
		}
	;

unravel:	vUnravel vNavigator player_name '\n' {
			yylex.(*lexer).player.CmdUnravelNavigator($3)
		}
	;

use:		vUse name '\n' {
			yylex.(*lexer).player.CmdUse($2)
		}
	;

void:		vVoid opt_lit_job '\n' {
			yylex.(*lexer).player.CmdVoid()
		}
	;

wait:		vWait '\n' {
			yylex.(*lexer).player.CmdWait()
		}
	;

wanted:		vWanted '\n' {
			yylex.(*lexer).player.CmdWanted()
		}
	;

whereis:	vWhereis name '\n' {
			yylex.(*lexer).player.CmdWhereIs($2)
		}
	;

who:		vWho '\n' {
			yylex.(*lexer).player.CmdWho()
		}
	|	vWho on_channel '\n' {
			yylex.(*lexer).player.CmdWhoChannel($2)
		}
	|	vWho opt_lit_in system_name '\n' {
			yylex.(*lexer).player.CmdWhoSystem($3)
		}
	;

whois:		vWhois ID_NUM '\n' {
			yylex.(*lexer).player.CmdWhoIsUID(ibgames.AccountID($2))
		}
	|	vWhois vToken '\n' {
			yylex.(*lexer).player.CmdWhoIsName($2)
			// return 0
		}
	;

work:		vWork opt_duchy_name '\n' {
			yylex.(*lexer).player.CmdWork($2)
		}
	;

opt_vGo:	/* empty */
	|	vGo
	;

lit_imperial_groats:
		vIg
	|	opt_lit_imperial vGroats
	;

lit_into:	vIn
	|	vInto
	;

lit_laser:	opt_lit_single vLaser
	;

lit_mag_gun:	opt_lit_mag vGun
	;

lit_missile_rack:
		opt_lit_missile vRack
	;

lit_none_or_off:
		vNone
	|	vOff
	;

lit_quad_laser:	vQL
	|	vQuad vLaser
	;

lit_social_security:
		vSocial opt_lit_security
	;

lit_spy_beam:	opt_lit_spy vBeam
	|	vSpybeam
	;

lit_spy_screen:	opt_lit_spy vScreen
	|	vSpyscreen
	;

lit_tax_rate:	vTax opt_lit_rate
	;

lit_twin_laser:	vTL
	|	vTwin vLaser
	;

opt_lit_a:	/* empty */
	|	vA
	;

opt_lit_a_missile:
		/* empty */
	|	opt_lit_a vMissile
	;

opt_lit_at:	/* empty */
	|	vAt
	;

opt_lit_bay:	/* empty */
	|	vBay
	;

opt_lit_cargo:	/* empty */
	|	vCargo
	;

opt_lit_channel:
		/* empty */
	|	vChannel
	;

opt_lit_duchy:	/* empty */
	|	vDuchy
	;

opt_lit_factory:
		/* empty */
	|	vFactory
	;

opt_lit_from:	/* empty */
	|	vFrom
	;

opt_lit_imperial:
		/* empty */
	|	vImperial
	;

opt_lit_imperial_groats:
		/* empty */
	|	lit_imperial_groats
	;

opt_lit_in:	/* empty */
	|	vIn
	;

opt_lit_job:	/* empty */
	|	vJob
	;

opt_lit_mag:	/* empty */
	|	vMag
	;

opt_lit_me:	/* empty */
	|	vMe
	;

opt_lit_minutes:
		/* empty */
	|	vMinutes
	;

opt_lit_missile:
		/* empty */
	|	vMissile
	;

opt_lit_my:	/* empty */
	|	vMy
	;

opt_lit_on:	/* empty */
	|	vOn
	;

opt_lit_planet:	/* empty */
	|	vPlanet
	;

opt_lit_rate:	/* empty */
	|	vRate
	;

opt_lit_security:
		/* empty */
	|	vSecurity
	;

opt_lit_shares:	/* empty */
	|	vShares
	;

opt_lit_single:	/* empty */
	|	vSingle
	;

opt_lit_slot:	/* empty */
	|	vSlot
	;

opt_lit_spaceship:
		/* empty */
	|	vSpaceship
	;

opt_lit_spy:	/* empty */
	|	vSpy
	;

opt_lit_system:	/* empty */
	|	vSystem
	;

opt_lit_the:	/* empty */
	|	vThe
	;

opt_lit_to:	/* empty */
	|	vTo
	;

opt_lit_warehouse:
		/* empty */
	|	vWarehouse
	;

opt_lit_any_or_the:
		/* empty */
	|	vAny
	|	vThe
	;

opt_lit_cargo_or_job:
		/* empty */
	|	vCargo
	|	vJob
	;

bay:		opt_lit_bay bay_no	{ $$ = $2 }
	;

bay_no:		ID_NUM
	|	vInt
	;

bay_list:	bay		{ addToBayList($1) }
	|	bay_list bay	{ addToBayList($2) }
	;

button_colour:	vBlue	{ $$ = model.ColourBlue }
	|	vBrown	{ $$ = model.ColourBrown }
	|	vOrange	{ $$ = model.ColourOrange }
	;

cargo_bay:	opt_lit_cargo bay	{ $$ = $2 }
	;

on_channel:	opt_lit_on channel	{ $$ = $2 }
	;

to_channel:	opt_lit_to channel	{ $$ = $2 }
	;

channel:	opt_lit_channel channel_no	{ $$ = $2 }
	;

channel_no:	ID_NUM
	|	vInt
	;

commodity:	vGAsChips	{ $$ = model.CommodityGAsChips }
	|	vBioChips	{ $$ = model.CommodityBioChips }
	|	vMasers		{ $$ = model.CommodityMasers }
	|	vWeapons	{ $$ = model.CommodityWeapons }
	|	vVidi		{ $$ = model.CommodityVidi }
	|	vElectros	{ $$ = model.CommodityElectros }
	|	vTools		{ $$ = model.CommodityTools }
	|	vSynths		{ $$ = model.CommoditySynths }
	|	vDroids		{ $$ = model.CommodityDroids }
	|	vAntiMatter	{ $$ = model.CommodityAntiMatter }
	|	vPowerPacks	{ $$ = model.CommodityPowerPacks }
	|	vControllers	{ $$ = model.CommodityControllers }
	|	vGenerators	{ $$ = model.CommodityGenerators }
	|	vPolymers	{ $$ = model.CommodityPolymers }
	|	vLubOils	{ $$ = model.CommodityLubOils }
	|	vPharms		{ $$ = model.CommodityPharms }
	|	vPetros		{ $$ = model.CommodityPetros }
	|	vRNA		{ $$ = model.CommodityRNA }
	|	vPropellants	{ $$ = model.CommodityPropellants }
	|	vExplosives	{ $$ = model.CommodityExplosives }
	|	vLanzariK	{ $$ = model.CommodityLanzariK }
	|	vNitros		{ $$ = model.CommodityNitros }
	|	vMunitions	{ $$ = model.CommodityMunitions }
	|	vMechParts	{ $$ = model.CommodityMechParts }
	|	vCereals	{ $$ = model.CommodityCereals }
	|	vWoods		{ $$ = model.CommodityWoods }
	|	vHides		{ $$ = model.CommodityHides }
	|	vTextiles	{ $$ = model.CommodityTextiles }
	|	vMeat		{ $$ = model.CommodityMeat }
	|	vSpices		{ $$ = model.CommoditySpices }
	|	vFruit		{ $$ = model.CommodityFruit }
	|	vSoya		{ $$ = model.CommoditySoya }
	|	vStock		{ $$ = model.CommodityStock }
	|	vFurs		{ $$ = model.CommodityFurs }
	|	vRads		{ $$ = model.CommodityRads }
	|	vNickel		{ $$ = model.CommodityNickel }
	|	vXmetals	{ $$ = model.CommodityXmetals }
	|	vCrystals	{ $$ = model.CommodityCrystals }
	|	vAlloys		{ $$ = model.CommodityAlloys }
	|	vGold		{ $$ = model.CommodityGold }
	|	vMonopoles	{ $$ = model.CommodityMonopoles }
	|	vHypnotapes	{ $$ = model.CommodityHypnotapes }
	|	vStudios	{ $$ = model.CommodityStudios }
	|	vSensAmps	{ $$ = model.CommoditySensAmps }
	|	vGames		{ $$ = model.CommodityGames }
	|	vArtifacts	{ $$ = model.CommodityArtifacts }
	|	vKatydidics	{ $$ = model.CommodityKatydidics }
	|	vMusiks		{ $$ = model.CommodityMusiks }
	|	vLibraries	{ $$ = model.CommodityLibraries }
	|	vHolos		{ $$ = model.CommodityHolos }
	|	vUnivators	{ $$ = model.CommodityUnivators }
	|	vSims		{ $$ = model.CommoditySims }
	;

group:		vAgricultural	{ $$ = model.GroupAgricultural }
	|	vMining		{ $$ = model.GroupMining }
	|	vIndustrial	{ $$ = model.GroupIndustrial }
	|	vTechnological	{ $$ = model.GroupTechnological }
	|	vLeisure	{ $$ = model.GroupLeisure }
	;

to_delivery:	opt_lit_to delivery	{ $$ = $2 }
	;

delivery:	vExchange	{ $$ = model.DeliverExchange }
	|	vWarehouse	{ $$ = model.DeliverWarehouse }
	;

direction:	vNorth		{ $$ = 0 } // FIXME: directionNorth
	|	vNortheast	{ $$ = 1 } // FIXME: directionNE
	|	vEast		{ $$ = 2 } // FIXME: directionEast
	|	vSoutheast	{ $$ = 3 } // FIXME: directionSE
	|	vSouth		{ $$ = 4 } // FIXME: directionSouth
	|	vSouthwest	{ $$ = 5 } // FIXME: directionSW
	|	vWest		{ $$ = 6 } // FIXME: directionWest
	|	vNorthwest	{ $$ = 7 } // FIXME: directionNW
	|	vUp		{ $$ = 8 } // FIXME: directionUp
	|	vDown		{ $$ = 9 } // FIXME: directionDown
	|	vIn		{ $$ = 10 } // FIXME: directionIn
	|	vOut		{ $$ = 11 } // FIXME: directionOut
	;

duchy_name:	vToken opt_lit_duchy
	;

opt_factory_no:	/* empty */	{ $$ = -1 }
	|	factory_no	{ $$ = $1 }
	;

factory_no:	ID_NUM
	|	vInt
	;

from_planet:	opt_lit_from planet_name	{ $$ = $2 }
	;

gamble_colour:	vBlack	{ $$ = model.ColourBlack }
	|	vRed	{ $$ = model.ColourRed }
	;

groats:		groats_int opt_lit_imperial_groats
	;

groats_int:	vInt
	|	PRETTY_INT
	;

gtus:		vInt
	|	PRETTY_INT
	;

help_topic:	vAccept			{ $$ = vAccept }
	|	vAct			{ $$ = vAct }
	|	vAdd			{ $$ = vAdd }
	|	vAlarm			{ $$ = vAlarm }
	|	vAllocate		{ $$ = vAllocate }
	|	vAutomatic		{ $$ = vAutomatic }
	|	vBang			{ $$ = vBang }
	|	vBash			{ $$ = vBash }
	|	vBlast			{ $$ = vBlast }
	|	vBribe			{ $$ = vBribe }
	|	vBrief			{ $$ = vBrief }
	|	vBuild			{ $$ = vBuild }
	|	vBuy			{ $$ = vBuy }
	|	vChange			{ $$ = vChange }
	|	vCheat			{ $$ = vCheat }
	|	vCheck			{ $$ = vCheck }
	|	vClear			{ $$ = vClear }
	|	vComms			{ $$ = vComms }
	|	vCommunicate		{ $$ = vCommunicate }
	|	vCommands		{ $$ = vCommands }
	|	vCommunicating		{ $$ = vCommunicating }
	|	vContract		{ $$ = vContract }
	|	vCuddle			{ $$ = vCuddle }
	|	vCure			{ $$ = vCure }
	|	vDeal			{ $$ = vDeal }
	|	vDeallocate		{ $$ = vDeallocate }
	|	vDigest			{ $$ = vDigest }
	|	vDisplay		{ $$ = vDisplay }
	|	vDividend		{ $$ = vDividend }
	|	vDrink			{ $$ = vDrink }
	|	vDrop			{ $$ = vDrop }
	|	vEat			{ $$ = vEat }
	|	vEnter			{ $$ = vEnter }
	|	vExamine		{ $$ = vExamine }
	|	vExpel			{ $$ = vExpel }
	|	vFetch			{ $$ = vFetch }
	|	vFighting		{ $$ = vFighting }
	|	vFire			{ $$ = vFire }
	|	vFit			{ $$ = vFit }
	|	vFull			{ $$ = vFull }
	|	vGamble			{ $$ = vGamble }
	|	vGet			{ $$ = vGet }
	|	vGive			{ $$ = vGive }
	|	vGlance			{ $$ = vGlance }
	|	vGo			{ $$ = vGo }
	|	vGoto			{ $$ = vGoto }
	|	vGrope			{ $$ = vGrope }
	|	vHelp			{ $$ = vHelp }
	|	vHug			{ $$ = vHug }
	|	lit_imperial_groats	{ $$ = vGroats }
	|	vInstall		{ $$ = vInstall }
	|	vInsure			{ $$ = vInsure }
	|	vInventory		{ $$ = vInventory }
	|	vIssue			{ $$ = vIssue }
	|	vJettison		{ $$ = vJettison }
	|	vJob			{ $$ = vJob }
	|	vJobs			{ $$ = vJobs }
	|	vJoin			{ $$ = vJoin }
	|	vJump			{ $$ = vJump }
	|	vKiss			{ $$ = vKiss }
	|	vLand			{ $$ = vLand }
	|	vLaunch			{ $$ = vLaunch }
	|	vLiquidate		{ $$ = vLiquidate }
	|	vLoad			{ $$ = vLoad }
	|	vLook			{ $$ = vLook }
	|	vManual			{ $$ = vManual }
	|	vMood			{ $$ = vMood }
	|	vMovement		{ $$ = vMovement }
	|	vNationalize		{ $$ = vNationalize }
	|	vOffer			{ $$ = vOffer }
	|	vOffline		{ $$ = vOffline }
	|	vOnline			{ $$ = vOnline }
	|	vOrbit			{ $$ = vOrbit }
	|	vOrder			{ $$ = vOrder }
	|	vPaint			{ $$ = vPaint }
	|	vPlanet			{ $$ = vPlanet }
	|	vPlay			{ $$ = vPlay }
	|	vPost			{ $$ = vPost }
	|	vPress			{ $$ = vPress }
	|	vPull			{ $$ = vPull }
	|	vPut			{ $$ = vPut }
	|	vQuickscore		{ $$ = vQuickscore }
	|	vQuickstatus		{ $$ = vQuickstatus }
	|	vQuickwho		{ $$ = vQuickwho }
	|	vQuit			{ $$ = vQuit }
	|	vRanks			{ $$ = vRanks }
	|	vRead			{ $$ = vRead }
	|	vRegistry		{ $$ = vRegistry }
	|	vReject			{ $$ = vReject }
	|	vRepair			{ $$ = vRepair }
	|	vRepay			{ $$ = vRepay }
	|	vReset			{ $$ = vReset }
	|	vReward			{ $$ = vReward }
	|	vSalute			{ $$ = vSalute }
	|	vSay			{ $$ = vSay }
	|	vScore			{ $$ = vScore }
	|	vSecede			{ $$ = vSecede }
	|	vSell			{ $$ = vSell }
	|	vSet			{ $$ = vSet }
	|	vShuffle		{ $$ = vShuffle }
	|	vSign			{ $$ = vSign }
	|	vSlap			{ $$ = vSlap }
	|	vSlide			{ $$ = vSlide }
	|	vSnog			{ $$ = vSnog }
	|	vSnuggle		{ $$ = vSnuggle }
	|	vSpaceship		{ $$ = vSpaceship }
	|	vSpy			{ $$ = vSpy }
	|	vSpynet			{ $$ = vSpynet }
	|	vStarting		{ $$ = vStarting }
	|	vStatus			{ $$ = vStatus }
	|	vStore			{ $$ = vStore }
	|	vSuicide		{ $$ = vSuicide }
	|	vSulk			{ $$ = vSulk }
	|	vSwitch			{ $$ = vSwitch }
	|	vSystems		{ $$ = vSystems }
	|	vTarget			{ $$ = vTarget }
	|	vTeleport		{ $$ = vTeleport }
	|	vTell			{ $$ = vTell }
	|	vTickle			{ $$ = vTickle }
	|	vTime			{ $$ = vTime }
	|	vTimewarp		{ $$ = vTimewarp }
	|	vTorch			{ $$ = vTorch }
	|	vTour			{ $$ = vTour }
	|	vTrace			{ $$ = vTrace }
	|	vTrade			{ $$ = vTrade }
	|	vTransmit		{ $$ = vTransmit }
	|	vTravel			{ $$ = vTravel }
	|	vTune			{ $$ = vTune }
	|	vType			{ $$ = vType }
	|	vUnload			{ $$ = vUnload }
	|	vUse			{ $$ = vUse }
	|	vVoid			{ $$ = vVoid }
	|	vWait			{ $$ = vWait }
	|	vWanted			{ $$ = vWanted }
	|	vWho			{ $$ = vWho }
	|	vWork			{ $$ = vWork }
	;

help_subtopic:	vAle			{ $$ = vAle }
	|	vAmmunition		{ $$ = vAmmunition }
	|	vCargo			{ $$ = vCargo }
	|	vClothes		{ $$ = vClothes }
	|	vCompany		{ $$ = vCompany }
	|	vDuchies		{ $$ = vDuchies }
	|	vDuchy			{ $$ = vDuchy }
	|	vEmbargo		{ $$ = vEmbargo }
	|	vFactories		{ $$ = vFactories }
	|	vFactory		{ $$ = vFactory }
	|	vFavoured		{ $$ = vFavoured }
	|	vFood			{ $$ = vFood }
	|	vFuel			{ $$ = vFuel }
	|	vGoods			{ $$ = vGoods }
	|	vInformation		{ $$ = vInformation }
	|	vJob			{ $$ = vJob }
	|	vLamp			{ $$ = vLamp }
	|	vLayoff			{ $$ = vLayoff }
	|	vMarkup			{ $$ = vMarkup }
	|	vMilkrun		{ $$ = vMilkrun }
	|	vMissiles		{ $$ = vMissiles }
	|	vNotice			{ $$ = vNotice }
	|	vOff			{ $$ = vOff }
	|	vOn			{ $$ = vOn }
	|	vOutput			{ $$ = vOutput }
	|	vPizza			{ $$ = vPizza }
	|	vPlanet			{ $$ = vPlanet }
	|	vPrice			{ $$ = vPrice }
	|	vProduction		{ $$ = vProduction }
	|	vProject		{ $$ = vProject }
	|	vReport			{ $$ = vReport }
	|	vRound			{ $$ = vRound }
	|	vRoutes			{ $$ = vRoutes }
	|	lit_social_security	{ $$ = vSocial }
	|	vSpaceship		{ $$ = vSpaceship }
	|	lit_spy_beam		{ $$ = vSpybeam }
	|	lit_spy_screen		{ $$ = vSpyscreen }
	|	vStockpile		{ $$ = vStockpile }
	|	lit_tax_rate		{ $$ = vTax }
	|	vTechnician		{ $$ = vTechnician }
	|	vWages			{ $$ = vWages }
	|	vWarehouse		{ $$ = vWarehouse }
	|	vWarehouses		{ $$ = vWarehouses }
	;

job_spec:	opt_lit_job job_no	{ $$ = $2 }
	;

job_no:		ID_NUM	{ $$ = $1 }
	|	vInt	{ $$ = $1 }
	;

location_no:	ID_NUM
	|	vInt
	;

minutes:	minutes_no opt_lit_minutes
	;

minutes_no:	vInt
	|	PRETTY_INT
	;

name:		vMe {
		   $$.The = false
		   $$.Words = 1
		   $$.Text = yylex.(*lexer).player.Name()
		}
	|	opt_the vTechnician {
		   $$.The = $1;
		   $$.Words = 1;
		   $$.Text = "technician"
		}
	|	opt_the vToken opt_token {
		   $$.The = $1;

		   if ($3 == "") { // FIXME: 0
		      $$.Words = 1;
		      $$.Text = $2;
		   } else {
		      // FIXME:
		      // name := make([]byte(32)) // FIXME: char name[NAME_SIZE * 2];
		      // fmt.Sprintf(name, "%s %s", $2, $3);

		      $$.Words = 2;
		      $$.Text = "parsedToken(name);" // FIXME: parsedToken(name);
		   }
		}
	;

opt_the:	/* empty */	{ $$ = false }
	|	vThe		{ $$ = true }
	;

opt_token:	/* empty */	{ $$ = "" } // FIXME: 0
	|	vToken		{ $$ = $1 }
	;

percent:	vInt
	|	vPercent
	|	vSignedInt
	;

opt_on_planet:	/* empty */	{ $$ = "" } // FIXME: 0
	|	on_planet	{ $$ = $1 }
	;

on_planet:	opt_lit_on planet_name	{ $$ = $2 }
	;

opt_duchy_name:	/* empty */	{ $$ = "" } // FIXME: 0
	|	duchy_name	{ $$ = $1 }
	;

opt_planet_name:
		/* empty */	{ $$ = "" } // FIXME: 0
	|	planet_name	{ $$ = $1 }
	;

planet_name:	vToken
	;

player_name:	vMe	{ $$ = yylex.(*lexer).player.Name() }
	|	vToken
	;

opt_points:	/* empty */	{ $$ = 1 }
	|	points		{ $$ = $1 }
	;

points:		quantity	{ $$ = $1 }
	;

project:	vLink		{ $$ = model.ProjectLink }
	|	vEducation	{ $$ = model.ProjectEducation }
	|	vEnergy		{ $$ = model.ProjectEnergy }
	|	vHealth		{ $$ = model.ProjectHealth }
	|	vInfrastructure	{ $$ = model.ProjectInfra }
	|	vSecurity	{ $$ = model.ProjectSecurity }
	|	vUpside		{ $$ = model.ProjectUpside }
	|	vDownside	{ $$ = model.ProjectDownside }
	|	vBev		{ $$ = model.ProjectAccel }
	|	vMatproc	{ $$ = model.ProjectMatProc }
	|	vC3		{ $$ = model.ProjectC3 }
	|	vMattrans	{ $$ = model.ProjectMatTrans }
	|	vHgw		{ $$ = model.ProjectTimeMach }
	;

opt_quantity:	/* empty */	{ $$ = -1 }
	|	quantity	{ $$ = $1 }
	;

quantity:	vInt
	|	PRETTY_INT
	;

shares:		shares_no opt_lit_shares
	;

shares_no:	vInt
	|	PRETTY_INT
	;

slot:		opt_lit_slot slot_no	{ $$ = $2 }
	;

slot_no:	ID_NUM
	|	vInt
	;

opt_system_name:
		/* empty */	{ $$ = "" } // FIXME 0
	|	system_name	{ $$ = $1 }
	;

system_name:	vToken opt_lit_system
	;

to_planet:	opt_lit_to planet_name	{ $$ = $2 }
	;

tax:		vInt
	|	vPercent
	;

opt_text:	/* empty */	{ $$ = "" } // FIXME: 0
	|	vText		{ $$ = $1 }
	;

%%

func Parse(input string, player CommandExecutor) error {
	// engine.Mu.Lock()
	// defer engine.Mu.Unlock()

	l := newLexer(input, player)
	if result := yyParse(l); result != 0 {
		return fmt.Errorf("parse failed with code %d", result)
	}
	return nil
}

// static void
// addToBayList( const long bayNo )
// {
//    if (bayList.size < DIM_OF(bayList.bay)) {
//       bayList.bay[bayList.size] = bayNo;
//    }
//    bayList.size++;
// }

func addToBayList(bayNo int32) {
	if bayList.Size < len(bayList.Bay) {
		bayList.Bay[bayList.Size] = bayNo
	}
	bayList.Size++
}

// static void
// initBayList()
// {
//    bayList.size = 0;
//
//    for (size_t index = 0; index < DIM_OF(bayList.bay); index++) {
//       bayList.bay[index] = -1;
//    }
// }

func initBayList() {
	bayList.Size = 0
	for i := range bayList.Bay {
		bayList.Bay[i] = -1
	}
}

// static void
// yyerror( const char* )
// {
//    ;
// }
