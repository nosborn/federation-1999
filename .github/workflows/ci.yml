# yamllint disable rule:line-length
---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  HUGO_VERSION: 0.150.1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod

      - name: Install Hugo
        run: |
          mkdir "${RUNNER_TEMP:?}/hugo"
          curl -fJLOsS "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          tar -C "${RUNNER_TEMP:?}/hugo" -xf "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          rm "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          echo "${RUNNER_TEMP:?}/hugo" >>"${GITHUB_PATH:?}"

      - run: |
          make generate

      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0

      - run: |-
          make all

      - name: Get Git commit timestamps
        run: |
          echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >>"${GITHUB_ENV:?}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          # build-args: FOO=TODO
          # cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          # cache-to: type=inline
          context: .
          file: deployments/docker/Dockerfile
          # labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=${{ runner.temp }}/image.tar
          tags: |
            federation-1999:latest
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: image
          path: ${{ runner.temp }}/image.tar

  deploy:
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment: fly.io

    steps:
      - name: Download artifact
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: image
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/image.tar
          docker image ls -a

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: superfly/flyctl-actions/setup-flyctl@fc53c09e1bc3be6f54706524e3b82c4f462f77be # v1.5

      - run: |
          flyctl deploy --local-only --now
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
